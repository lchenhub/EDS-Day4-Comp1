---
title: "Untitled"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

## Functions

Make a function that doubles a value.

```{r}
double_value <- function(my_dollars) {
  print(2 * my_dollars)
}
```

```{r}
double_value(my_dollars = 10.13)
```

```{r}
monthly_income <- c(42, 50, 61, 75, 89, 50)

double_value(monthly_income)
```

Create a function that returns an awesome restaurant name given an cool animal and your favorite food.

```{r}
name_restaurant <- function(animal, food) {
  print(paste0(animal, food))
}

name_restaurant(animal = "hawk", food = "pizza")
```

Given temperature in degrees fahrenheit, write a function that converts it to Celsius.

#(32**°F** − 32) × 5/9 = 0**°C**

|     |
|-----|
|     |

```{r}

convertFtoC <- function(temp_f) {
  print((temp_f -32) * (5/9))
}
```

```{r}
convertFtoC(temp_f = 52)
```

Create a function that given inputs of age and hometown, returns "I am \_\_ years old, and I'm from \_\_\_."

```{r}
age_hometown <- function(age, hometown) {
  print(paste("I am", age, "years old, and I'm from", hometown))
}

age_hometown(age= 6, hometown = "Los Angeles")
```

# Functions with conditionals

```{r}
calculate_animal_age <- function(species, age_human_years) {
  if(species == "dog") {
    age_human_years * 7
  } else if (species == "goat") {
    age_human_years * 4.7
  } else {
    print("Please enter dog or goat.")
  }
}
```

```{r}
calculate_animal_age(species = "dog", age_human_years = 10)

calculate_animal_age(species = "whale", age_human_years = 4)
```

Write a function that, given temperature in Kelvin, if a user selects "metric" to the scale then return degrees Celsius, or if they select "english" then return degrees in Fahrenheit.

```{r}
convert_kelvin <- function(scale, temp_k) {
  if(scale == "metric") {
    temp_k - 273.15
  } else if (scale == "english") {
    ((temp_k - 273.15) * 1.8) + 32
  }
}
```

```{r}
my_value <- convert_kelvin(scale = "metric", temp_k = 40)
```

## More functions

Create a subset within a function and then return something based on that subset.

```{r}
dog_choice <- data.frame(dog_name =c("Khora", "Teddy", "Waffle", "Banjo", "Tallie"),
                         food = c("everything", "salmon", "pancakes", "chicken", "enchiladas"))
```

```{r}
dog_menu <- function(enter_dog_name) {
  my_subset <- filter(dog_choice, dog_name == enter_dog_name)
  print(paste("My name is", my_subset$dog_name, "and my favorite food is", my_subset$food))
}
filter(dog_choice, dog_name == "Waffle")
```

```{r}
dog_menu(enter_dog_name = "Waffle")
```

## Function with a for loop

```{r}
df_means <- function(df) {
  for (i in seq_along(df)) {
     col_mean <- mean(df[[i]], na.rm = TRUE)
     column_name <- colnames(df[i])
     print(paste("The mean value of", column_name, "is", col_mean))
  }
}
```

```{r}
df_means(df = mtcars)
```

```{r}
df_means(faithful)
```
